# Generated by Django 4.2.7 on 2025-08-19 07:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import documents.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("claims", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="GeneratedDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("pdf_report", "PDF Report"),
                            ("excel_export", "Excel Export"),
                            ("csv_export", "CSV Export"),
                            ("claim_form", "Claim Form"),
                        ],
                        max_length=20,
                        verbose_name="Document Type",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="Document Title"),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="generated/%Y/%m/", verbose_name="Generated File"
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Parameters used to generate this document",
                        verbose_name="Generation Parameters",
                    ),
                ),
                (
                    "generated_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Generated At"
                    ),
                ),
                (
                    "download_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Download Count"
                    ),
                ),
                (
                    "last_accessed",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Accessed"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this document will be automatically deleted",
                        null=True,
                        verbose_name="Expires At",
                    ),
                ),
                (
                    "expense_claim",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_documents",
                        to="claims.expenseclaim",
                        verbose_name="Related Claim",
                    ),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Generated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Generated Document",
                "verbose_name_plural": "Generated Documents",
                "ordering": ["-generated_at"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("receipt", "Receipt"),
                            ("invoice", "Invoice"),
                            ("proof", "Proof of Payment"),
                            ("other", "Other"),
                        ],
                        default="receipt",
                        max_length=20,
                        verbose_name="Document Type",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Supported formats: PDF, JPG, PNG, GIF, DOC, DOCX (Max 10MB)",
                        upload_to=documents.models.expense_document_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "pdf",
                                    "jpg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                    "doc",
                                    "docx",
                                ]
                            )
                        ],
                        verbose_name="File",
                    ),
                ),
                (
                    "original_filename",
                    models.CharField(
                        editable=False, max_length=255, verbose_name="Original Filename"
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        editable=False,
                        help_text="File size in bytes",
                        verbose_name="File Size",
                    ),
                ),
                (
                    "mime_type",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=100,
                        verbose_name="MIME Type",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Brief description of the document",
                        max_length=200,
                        verbose_name="Description",
                    ),
                ),
                (
                    "ocr_text",
                    models.TextField(
                        blank=True,
                        editable=False,
                        help_text="Text extracted from image using OCR",
                        verbose_name="OCR Text",
                    ),
                ),
                (
                    "ocr_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        editable=False,
                        help_text="Amount extracted from receipt using OCR",
                        max_digits=10,
                        null=True,
                        verbose_name="OCR Amount",
                    ),
                ),
                (
                    "ocr_date",
                    models.DateField(
                        blank=True,
                        editable=False,
                        help_text="Date extracted from receipt using OCR",
                        null=True,
                        verbose_name="OCR Date",
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Uploaded At"),
                ),
                (
                    "is_compressed",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the image has been compressed",
                        verbose_name="Is Compressed",
                    ),
                ),
                (
                    "original_size",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Original file size before compression",
                        null=True,
                        verbose_name="Original Size",
                    ),
                ),
                (
                    "expense_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="claims.expenseitem",
                        verbose_name="Expense Item",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Uploaded By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Expense Document",
                "verbose_name_plural": "Expense Documents",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="DocumentTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Template Name"),
                ),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("claim_form", "Expense Claim Form"),
                            ("report", "Expense Report"),
                            ("summary", "Summary Report"),
                        ],
                        max_length=20,
                        verbose_name="Template Type",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="templates/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["html", "pdf", "docx"]
                            )
                        ],
                        verbose_name="Template File",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document Template",
                "verbose_name_plural": "Document Templates",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DocumentProcessingJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "job_type",
                    models.CharField(
                        choices=[
                            ("ocr", "OCR Processing"),
                            ("compression", "Image Compression"),
                            ("thumbnail", "Thumbnail Generation"),
                        ],
                        max_length=20,
                        verbose_name="Job Type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "progress",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Progress percentage (0-100)",
                        validators=[django.core.validators.MaxValueValidator(100)],
                        verbose_name="Progress",
                    ),
                ),
                (
                    "result_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Results from processing job",
                        verbose_name="Result Data",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error Message"),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Started At"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Completed At"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processing_jobs",
                        to="documents.expensedocument",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document Processing Job",
                "verbose_name_plural": "Document Processing Jobs",
                "ordering": ["-created_at"],
            },
        ),
    ]
