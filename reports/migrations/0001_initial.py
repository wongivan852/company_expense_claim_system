# Generated by Django 4.2.7 on 2025-08-19 07:46

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ReportTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Template Name"),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("individual_summary", "Individual Expense Summary"),
                            ("department_summary", "Department Expense Summary"),
                            ("monthly_analytics", "Monthly Expense Analytics"),
                            ("quarterly_analytics", "Quarterly Expense Analytics"),
                            ("currency_breakdown", "Currency Breakdown Report"),
                            ("category_analysis", "Category Analysis Report"),
                            ("approval_summary", "Approval Summary Report"),
                            ("audit_trail", "Audit Trail Report"),
                        ],
                        max_length=30,
                        verbose_name="Report Type",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "template_file",
                    models.CharField(
                        help_text="Path to template file",
                        max_length=200,
                        verbose_name="Template File",
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Default parameters for this report template",
                        verbose_name="Default Parameters",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Available to all users",
                        verbose_name="Public",
                    ),
                ),
                (
                    "allowed_roles",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="User roles that can access this report",
                        verbose_name="Allowed Roles",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Report Template",
                "verbose_name_plural": "Report Templates",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SavedReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Report Name")),
                (
                    "parameters",
                    models.JSONField(
                        default=dict,
                        help_text="Parameters used to generate this report",
                        verbose_name="Report Parameters",
                    ),
                ),
                (
                    "date_from",
                    models.DateField(blank=True, null=True, verbose_name="Date From"),
                ),
                (
                    "date_to",
                    models.DateField(blank=True, null=True, verbose_name="Date To"),
                ),
                (
                    "department_filter",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Department Filter"
                    ),
                ),
                (
                    "category_filter",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Category Filter"
                    ),
                ),
                (
                    "status_filter",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Status Filter"
                    ),
                ),
                (
                    "cached_results",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Cached report results for performance",
                        verbose_name="Cached Results",
                    ),
                ),
                (
                    "cache_expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Cache Expires At"
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Visible to all users with report access",
                        verbose_name="Public Report",
                    ),
                ),
                (
                    "is_scheduled",
                    models.BooleanField(
                        default=False,
                        help_text="Generate this report automatically",
                        verbose_name="Scheduled",
                    ),
                ),
                (
                    "schedule_frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                        ],
                        max_length=20,
                        verbose_name="Schedule Frequency",
                    ),
                ),
                (
                    "last_generated",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Generated"
                    ),
                ),
                (
                    "next_generation",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Next Generation"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_reports",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "shared_with",
                    models.ManyToManyField(
                        blank=True,
                        related_name="shared_reports",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Shared With",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_reports",
                        to="reports.reporttemplate",
                        verbose_name="Report Template",
                    ),
                ),
            ],
            options={
                "verbose_name": "Saved Report",
                "verbose_name_plural": "Saved Reports",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Schedule Name"),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                        ],
                        max_length=10,
                        verbose_name="Frequency",
                    ),
                ),
                (
                    "run_time",
                    models.TimeField(
                        help_text="Time of day to generate the report",
                        verbose_name="Run Time",
                    ),
                ),
                (
                    "email_subject",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Email Subject"
                    ),
                ),
                (
                    "email_body",
                    models.TextField(
                        blank=True,
                        help_text="Email body template",
                        verbose_name="Email Body",
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Report Parameters"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "last_run",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Run"
                    ),
                ),
                (
                    "next_run",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Next Run"
                    ),
                ),
                (
                    "run_count",
                    models.PositiveIntegerField(default=0, verbose_name="Run Count"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        related_name="scheduled_reports",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Recipients",
                    ),
                ),
                (
                    "report_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="reports.reporttemplate",
                        verbose_name="Report Template",
                    ),
                ),
            ],
            options={
                "verbose_name": "Report Schedule",
                "verbose_name_plural": "Report Schedules",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        max_length=10,
                        verbose_name="Period Type",
                    ),
                ),
                (
                    "period_start",
                    models.DateField(
                        help_text="Start date of the period",
                        verbose_name="Period Start",
                    ),
                ),
                (
                    "period_end",
                    models.DateField(
                        help_text="End date of the period", verbose_name="Period End"
                    ),
                ),
                (
                    "total_claims",
                    models.PositiveIntegerField(default=0, verbose_name="Total Claims"),
                ),
                (
                    "total_amount_hkd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        verbose_name="Total Amount (HKD)",
                    ),
                ),
                (
                    "approved_claims",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Approved Claims"
                    ),
                ),
                (
                    "approved_amount_hkd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        verbose_name="Approved Amount (HKD)",
                    ),
                ),
                (
                    "rejected_claims",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Rejected Claims"
                    ),
                ),
                (
                    "pending_claims",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Pending Claims"
                    ),
                ),
                (
                    "average_claim_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="Average Claim Amount",
                    ),
                ),
                (
                    "category_breakdown",
                    models.JSONField(
                        default=dict,
                        help_text="Amount breakdown by expense category",
                        verbose_name="Category Breakdown",
                    ),
                ),
                (
                    "currency_breakdown",
                    models.JSONField(
                        default=dict,
                        help_text="Amount breakdown by currency",
                        verbose_name="Currency Breakdown",
                    ),
                ),
                (
                    "department_breakdown",
                    models.JSONField(
                        default=dict,
                        help_text="Amount breakdown by department",
                        verbose_name="Department Breakdown",
                    ),
                ),
                (
                    "average_approval_time_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Average Approval Time (Hours)",
                    ),
                ),
                (
                    "calculated_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Calculated At"
                    ),
                ),
            ],
            options={
                "verbose_name": "Expense Analytics",
                "verbose_name_plural": "Expense Analytics",
                "ordering": ["-period_start"],
                "unique_together": {("period_type", "period_start", "period_end")},
            },
        ),
        migrations.CreateModel(
            name="DashboardWidget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "widget_type",
                    models.CharField(
                        choices=[
                            ("expense_summary", "Expense Summary"),
                            ("recent_claims", "Recent Claims"),
                            ("pending_approvals", "Pending Approvals"),
                            ("category_chart", "Category Chart"),
                            ("monthly_trend", "Monthly Trend"),
                            ("currency_breakdown", "Currency Breakdown"),
                            ("approval_stats", "Approval Statistics"),
                        ],
                        max_length=20,
                        verbose_name="Widget Type",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Widget Title"
                    ),
                ),
                (
                    "configuration",
                    models.JSONField(
                        default=dict,
                        help_text="Widget-specific configuration options",
                        verbose_name="Widget Configuration",
                    ),
                ),
                (
                    "position_row",
                    models.PositiveIntegerField(default=1, verbose_name="Row Position"),
                ),
                (
                    "position_col",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Column Position"
                    ),
                ),
                (
                    "width",
                    models.PositiveIntegerField(
                        default=6,
                        help_text="Width in grid columns (1-12)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                        verbose_name="Width",
                    ),
                ),
                (
                    "height",
                    models.PositiveIntegerField(
                        default=4,
                        help_text="Height in grid rows",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                        verbose_name="Height",
                    ),
                ),
                (
                    "is_visible",
                    models.BooleanField(default=True, verbose_name="Visible"),
                ),
                (
                    "refresh_interval",
                    models.PositiveIntegerField(
                        default=300,
                        help_text="How often to refresh widget data",
                        verbose_name="Refresh Interval (seconds)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dashboard_widgets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dashboard Widget",
                "verbose_name_plural": "Dashboard Widgets",
                "ordering": ["user", "position_row", "position_col"],
                "unique_together": {("user", "position_row", "position_col")},
            },
        ),
    ]
