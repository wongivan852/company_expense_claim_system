# Generated by Django 4.2.7 on 2025-08-19 07:46

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ClaimComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        help_text="Feedback or notes about the claim",
                        verbose_name="Comment",
                    ),
                ),
                (
                    "is_internal",
                    models.BooleanField(
                        default=False,
                        help_text="Only visible to managers and admins",
                        verbose_name="Internal Comment",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Claim Comment",
                "verbose_name_plural": "Claim Comments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ClaimStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("under_review", "Under Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("paid", "Paid"),
                        ],
                        max_length=20,
                        verbose_name="Old Status",
                    ),
                ),
                (
                    "new_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("under_review", "Under Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("paid", "Paid"),
                        ],
                        max_length=20,
                        verbose_name="New Status",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Status History",
                "verbose_name_plural": "Status Histories",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Official company name",
                        max_length=200,
                        verbose_name="Company Name",
                    ),
                ),
                (
                    "name_chinese",
                    models.CharField(
                        blank=True,
                        help_text="Company name in Chinese",
                        max_length=200,
                        verbose_name="Chinese Name",
                    ),
                ),
                (
                    "name_simplified",
                    models.CharField(
                        blank=True,
                        help_text="Company name in Simplified Chinese",
                        max_length=200,
                        verbose_name="Simplified Chinese",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Short company identifier (e.g., CGEL, KIL)",
                        max_length=20,
                        unique=True,
                        verbose_name="Company Code",
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("holding", "Holding Company"),
                            ("institute", "Institute/Education"),
                            ("technology", "Technology Company"),
                            ("entertainment", "Entertainment Company"),
                        ],
                        default="holding",
                        max_length=20,
                        verbose_name="Company Type",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True, help_text="Company address", verbose_name="Address"
                    ),
                ),
                (
                    "address_chinese",
                    models.TextField(
                        blank=True,
                        help_text="Company address in Chinese",
                        verbose_name="Chinese Address",
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        blank=True,
                        help_text="Business registration number",
                        max_length=50,
                        verbose_name="Registration Number",
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(
                        blank=True,
                        help_text="Tax identification number",
                        max_length=50,
                        verbose_name="Tax ID",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Asia/Hong_Kong",
                        help_text="Company timezone",
                        max_length=50,
                        verbose_name="Timezone",
                    ),
                ),
                (
                    "country_code",
                    models.CharField(
                        default="HK",
                        help_text="ISO country code",
                        max_length=2,
                        verbose_name="Country Code",
                    ),
                ),
                (
                    "requires_manager_approval",
                    models.BooleanField(
                        default=True,
                        help_text="Whether expenses need manager approval",
                        verbose_name="Requires Manager Approval",
                    ),
                ),
                (
                    "approval_threshold",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Amount above which additional approval is needed",
                        max_digits=10,
                        null=True,
                        verbose_name="Approval Threshold",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Company",
                "verbose_name_plural": "Companies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="ISO 4217 currency code (e.g., HKD, RMB)",
                        max_length=3,
                        unique=True,
                        verbose_name="Currency Code",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Currency Name")),
                (
                    "symbol",
                    models.CharField(blank=True, max_length=5, verbose_name="Symbol"),
                ),
                (
                    "is_base_currency",
                    models.BooleanField(
                        default=False,
                        help_text="Primary currency for reporting (HKD)",
                        verbose_name="Base Currency",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
            ],
            options={
                "verbose_name": "Currency",
                "verbose_name_plural": "Currencies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ExchangeRate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rate_to_base",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Exchange rate to base currency (HKD)",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(
                                Decimal("0.000001")
                            )
                        ],
                        verbose_name="Rate to Base Currency",
                    ),
                ),
                (
                    "effective_date",
                    models.DateTimeField(
                        help_text="When this rate becomes effective",
                        verbose_name="Effective Date",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        help_text="Source of exchange rate (e.g., xe.com)",
                        max_length=50,
                        verbose_name="Source",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Exchange Rate",
                "verbose_name_plural": "Exchange Rates",
                "ordering": ["-effective_date"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Internal code for category",
                        max_length=50,
                        unique=True,
                        verbose_name="Category Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Category Name"),
                ),
                (
                    "name_chinese",
                    models.CharField(
                        help_text="Category name in Chinese",
                        max_length=100,
                        verbose_name="Chinese Name",
                    ),
                ),
                (
                    "name_simplified",
                    models.CharField(
                        blank=True,
                        help_text="Category name in Simplified Chinese",
                        max_length=100,
                        verbose_name="Simplified Chinese",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "requires_receipt",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this category requires receipt attachment",
                        verbose_name="Requires Receipt",
                    ),
                ),
                (
                    "is_travel_related",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is a travel-related expense",
                        verbose_name="Travel Related",
                    ),
                ),
                (
                    "requires_participants",
                    models.BooleanField(
                        default=False,
                        help_text="Whether participant details are required",
                        verbose_name="Requires Participants",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Order for display in forms",
                        verbose_name="Sort Order",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Expense Category",
                "verbose_name_plural": "Expense Categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ExpenseClaim",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "claim_number",
                    models.CharField(
                        editable=False,
                        max_length=20,
                        unique=True,
                        verbose_name="Claim Number",
                    ),
                ),
                (
                    "event_name",
                    models.CharField(
                        blank=True,
                        help_text="e.g., IAICC event",
                        max_length=200,
                        verbose_name="Event/Project Name",
                    ),
                ),
                (
                    "period_from",
                    models.DateField(
                        help_text="Start date of expense period",
                        verbose_name="Period From",
                    ),
                ),
                (
                    "period_to",
                    models.DateField(
                        help_text="End date of expense period", verbose_name="Period To"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("under_review", "Under Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("paid", "Paid"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "checked_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Checked At"
                    ),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Approved At"
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, verbose_name="Rejection Reason"),
                ),
                (
                    "total_amount_original",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        editable=False,
                        max_digits=12,
                        verbose_name="Total Amount (Original)",
                    ),
                ),
                (
                    "total_amount_hkd",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        editable=False,
                        max_digits=12,
                        verbose_name="Total Amount (HKD)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "submitted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Submitted At"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_claims",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Approved By",
                    ),
                ),
                (
                    "checked_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="checked_claims",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Checked By",
                    ),
                ),
                (
                    "claimant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="expense_claims",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Claimant",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.company",
                        verbose_name="Company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Expense Claim",
                "verbose_name_plural": "Expense Claims",
                "ordering": ["-created_at"],
                "permissions": [
                    ("can_approve_claims", "Can approve expense claims"),
                    ("can_view_all_claims", "Can view all expense claims"),
                ],
            },
        ),
        migrations.CreateModel(
            name="ExpenseItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_number",
                    models.PositiveIntegerField(
                        help_text="Sequential number within the claim",
                        verbose_name="Item Number",
                    ),
                ),
                (
                    "expense_date",
                    models.DateField(
                        help_text="Date when the expense was incurred",
                        verbose_name="Expense Date",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the expense",
                        verbose_name="Description",
                    ),
                ),
                (
                    "description_chinese",
                    models.TextField(
                        blank=True,
                        help_text="Description in Chinese",
                        verbose_name="Chinese Description",
                    ),
                ),
                (
                    "original_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Original Amount",
                    ),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Rate used for conversion to HKD",
                        max_digits=10,
                        verbose_name="Exchange Rate",
                    ),
                ),
                (
                    "amount_hkd",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Amount converted to HKD",
                        max_digits=10,
                        verbose_name="Amount (HKD)",
                    ),
                ),
                (
                    "has_receipt",
                    models.BooleanField(
                        default=True,
                        help_text="Whether receipt is available",
                        verbose_name="Has Receipt",
                    ),
                ),
                (
                    "receipt_notes",
                    models.CharField(
                        blank=True,
                        help_text="e.g., 'Paper receipt', 'without receipt'",
                        max_length=200,
                        verbose_name="Receipt Notes",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Location where expense was incurred",
                        max_length=200,
                        verbose_name="Location",
                    ),
                ),
                (
                    "participants",
                    models.CharField(
                        blank=True,
                        help_text="People involved (e.g., 'Total 2 persons included Jeff and Ivan')",
                        max_length=200,
                        verbose_name="Participants",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, verbose_name="Additional Notes"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.expensecategory",
                        verbose_name="Category",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.currency",
                        verbose_name="Currency",
                    ),
                ),
                (
                    "expense_claim",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expense_items",
                        to="claims.expenseclaim",
                    ),
                ),
            ],
            options={
                "verbose_name": "Expense Item",
                "verbose_name_plural": "Expense Items",
                "ordering": ["expense_claim", "item_number"],
            },
        ),
        migrations.AddIndex(
            model_name="expensecategory",
            index=models.Index(fields=["code"], name="claims_expe_code_cf75d6_idx"),
        ),
        migrations.AddIndex(
            model_name="expensecategory",
            index=models.Index(
                fields=["is_active", "sort_order"],
                name="claims_expe_is_acti_e0ecfc_idx",
            ),
        ),
        migrations.AddField(
            model_name="exchangerate",
            name="currency",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="exchange_rates",
                to="claims.currency",
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="base_currency",
            field=models.ForeignKey(
                blank=True,
                help_text="Primary currency for this company",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="claims.currency",
            ),
        ),
        migrations.AddField(
            model_name="claimstatushistory",
            name="changed_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Changed By",
            ),
        ),
        migrations.AddField(
            model_name="claimstatushistory",
            name="expense_claim",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="status_history",
                to="claims.expenseclaim",
            ),
        ),
        migrations.AddField(
            model_name="claimcomment",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Author",
            ),
        ),
        migrations.AddField(
            model_name="claimcomment",
            name="expense_claim",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="claims.expenseclaim",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="expenseitem",
            unique_together={("expense_claim", "item_number")},
        ),
        migrations.AlterUniqueTogether(
            name="exchangerate",
            unique_together={("currency", "effective_date")},
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(fields=["code"], name="claims_comp_code_aa8a54_idx"),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(
                fields=["is_active", "company_type"],
                name="claims_comp_is_acti_249c79_idx",
            ),
        ),
    ]
